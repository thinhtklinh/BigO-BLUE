// Ex1:
read n, m
graph = [[] for _ in range(n)]

for i=0 to m-1:
    read a, b, c
    graph[a-1].append((b-1, c))
    graph[b-1].append((a-1, c))

dist = [INF] * n
visited = [False] * n
Prim(1)
ans = 0
for i = 0 to n-1:
    ans += dist[i]
print(ans)

def Prim(src):
    pq = PriorityQueue()
    pq.push((src, 0))
    dist[src] = 0
    while pq not empty:
        w, u = pq.top()
        pq.pop()
        visited[u] = True
        for v, weight in graph[u]:
            if not visited[v] and weight < dist[v]:
            dist[v] = weight
            pq.push((dist[v], v))

